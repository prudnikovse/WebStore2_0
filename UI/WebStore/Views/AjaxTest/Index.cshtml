
@{
    ViewData["Title"] = "Index";
}

<h3>@ViewBag.Title</h3>

<div class="row">
    <div class="col-sm-4">
        <h4> Рендеринг на стороне серевера</h4>

        <a class="btn btn-default" 
           data-ajax="true" 
           data-ajax-url="@Url.Action("GetTestView", "AjaxTest", new { id = 42, message = "Test message" })"
           data-ajax-update="#panel-server"
           data-ajax-loading="#spinner-server">
            Загрузка
        </a>
        <span id="spinner-server" style="display: none">
            <i class="fa fa-spinner fa-spin"></i>
        </span>

        <div id="panel-server"></div>
    </div>

    <div class="col-sm-4">
        <h4> Рендеринг на стороне клиента</h4>

        <a class="btn btn-default"
           data-ajax="true" 
           data-ajax-url="@Url.Action("GetJSON", "AjaxTest", new { id = 42, message = "Test message from client" })"
           data-ajax-loading="#spinner-client"
           data-ajax-success="OnDataLoaded">
            Загрузка
        </a>
        <span id="spinner-client" style="display: none">
            <i class="fa fa-spinner fa-spin"></i>
        </span>

        <div id="panel-client"></div>
    </div>

    <div class="col-sm-4">
        <h4> Рендеринг с помощью JS</h4>

        <a class="btn btn-default" id="load-data-button"
           data-ajax-loading="#spinner-js">
            Загрузка
        </a>
        <span id="spinner-js" style="display: none">
            <i class="fa fa-spinner fa-spin"></i>
        </span>

        <div id="panel-js"></div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/jquery-ajax-unobtrusive/dist/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        OnDataLoaded = data => {
            const host = $('#panel-client')
            host.empty()
            host.append(`message ${data.message}`)
            host.append('<br/>')
            host.append(`time ${data.serverTime}`)
        }

        $('#load-data-button').click(e => {
            e.preventDefault()

            console.log('Server data to server')

            fetch('@Url.Action("GetJSON", "AjaxTest", new { id = 422, message = "Test message from js" })')
                .then(response => response.json())
                .catch(() => { console.log('Server error!') })
                .then(data => {
                    const host = $('#panel-js')
                    host.empty()
                    host.append(`message ${data.message}`)
                    host.append('<br/>')
                    host.append(`time ${data.serverTime}`)
                })
        })
    </script>
}

